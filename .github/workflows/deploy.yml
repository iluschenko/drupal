name: Drupal Build and Deploy

on:
  push:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, curl, gd, intl, mysql, zip
        
    - name: Install Composer
      run: |
        curl -sS https://getcomposer.org/installer | php
        sudo mv composer.phar /usr/local/bin/composer

    - name: Build Project
      run: |
        composer install --no-dev --optimize-autoloader
        composer dump-autoload --optimize

    - name: Create Build Artifact
      run: |
        zip -r build.zip web/ vendor/ composer.json composer.lock

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: build.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: .
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, dom, filter, gd, json, mysqlnd, pdo_mysql, simplexml, tokenizer, xmlwriter, zip, fileinfo, curl, exif, ftp, gmp, imap, ldap, mysqli, pdo_mysql, pdo_pgsql, pgsql, soap, sockets, sodium, xmlrpc, xsl, zlib
        coverage: none
        
    - name: Install Composer
      run: |
        curl -sS https://getcomposer.org/installer | php
        sudo mv composer.phar /usr/local/bin/composer
        
    - name: Install Drush
      run: |
        composer global require drush/drush
        echo "$HOME/.composer/vendor/bin" >> $GITHUB_PATH
        
    - name: Install Dependencies
      run: composer install --no-dev --optimize-autoloader